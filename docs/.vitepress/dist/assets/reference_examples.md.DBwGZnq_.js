import{_ as a,c as n,o as e,ag as i}from"./chunks/framework.CDAiG77C.js";const m=JSON.parse('{"title":"📚 Ejemplos de Uso","description":"","frontmatter":{},"headers":[],"relativePath":"reference/examples.md","filePath":"reference/examples.md"}'),l={name:"reference/examples.md"};function p(t,s,r,o,c,d){return e(),n("div",null,s[0]||(s[0]=[i(`<h1 id="📚-ejemplos-de-uso" tabindex="-1">📚 Ejemplos de Uso <a class="header-anchor" href="#📚-ejemplos-de-uso" aria-label="Permalink to &quot;📚 Ejemplos de Uso&quot;">​</a></h1><h2 id="🎯-casos-de-uso-reales" tabindex="-1">🎯 Casos de Uso Reales <a class="header-anchor" href="#🎯-casos-de-uso-reales" aria-label="Permalink to &quot;🎯 Casos de Uso Reales&quot;">​</a></h2><h3 id="_1-desarrollo-de-nueva-funcionalidad" tabindex="-1"><strong>1. Desarrollo de Nueva Funcionalidad</strong> <a class="header-anchor" href="#_1-desarrollo-de-nueva-funcionalidad" aria-label="Permalink to &quot;**1. Desarrollo de Nueva Funcionalidad**&quot;">​</a></h3><h4 id="objetivo-implementar-sistema-de-notificaciones-en-tiempo-real" tabindex="-1"><strong>Objetivo</strong>: Implementar sistema de notificaciones en tiempo real <a class="header-anchor" href="#objetivo-implementar-sistema-de-notificaciones-en-tiempo-real" aria-label="Permalink to &quot;**Objetivo**: Implementar sistema de notificaciones en tiempo real&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/context-eng</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;implementar sistema de notificaciones push en tiempo real con WebSockets&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Resultado Automático</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔄 PHASE 0: Intelligent Routing</span></span>
<span class="line"><span>├── Complexity: 1.4 (Medium-High)</span></span>
<span class="line"><span>├── Confidence: 0.75</span></span>
<span class="line"><span>├── Strategy: 5-phase full orchestration</span></span>
<span class="line"><span>└── Duration: ~18 minutes estimated</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 1: Discovery (4 minutes)</span></span>
<span class="line"><span>├── 🤖 Knowledge Specialist: Analyzed WebSocket patterns</span></span>
<span class="line"><span>├── 🤖 Pattern Specialist: Identified notification patterns</span></span>
<span class="line"><span>└── 📊 Results: Architecture recommendations ready</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 2: Planning (5 minutes)</span></span>
<span class="line"><span>├── 🤖 Planning Specialist: TDD approach selected</span></span>
<span class="line"><span>├── 🤖 Model Specialist: Sonnet recommended (implementation focus)</span></span>
<span class="line"><span>└── 📊 Results: Implementation plan with milestones</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 3: Execution (6 minutes)</span></span>
<span class="line"><span>├── 🤖 Parallel Coordinator: WebSocket + Database + Frontend</span></span>
<span class="line"><span>├── 🤖 Git Strategist: Feature branch with commit strategy</span></span>
<span class="line"><span>└── 📊 Results: Parallel implementation completed</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 4: Verification (2 minutes)</span></span>
<span class="line"><span>├── 🤖 Test Specialist: 24/24 tests passing</span></span>
<span class="line"><span>├── 🤖 Performance Specialist: &lt;200ms latency achieved</span></span>
<span class="line"><span>└── 📊 Results: 97% confidence, production ready</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 5: Documentation (1 minute)</span></span>
<span class="line"><span>├── 🤖 Documentation Specialist: API docs generated</span></span>
<span class="line"><span>├── 🤖 Pattern Specialist: Pattern crystallized for reuse</span></span>
<span class="line"><span>└── 📊 Results: Living documentation updated</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><strong>Entregables</strong>:</p><ul><li>✅ WebSocket server implementado</li><li>✅ Frontend notification components</li><li>✅ Database schema optimizada</li><li>✅ Tests completos con 97% coverage</li><li>✅ Documentación API generada</li><li>✅ Patrón reutilizable creado</li></ul><hr><h3 id="_2-analisis-de-codigo-legacy" tabindex="-1"><strong>2. Análisis de Código Legacy</strong> <a class="header-anchor" href="#_2-analisis-de-codigo-legacy" aria-label="Permalink to &quot;**2. Análisis de Código Legacy**&quot;">​</a></h3><h4 id="objetivo-entender-y-documentar-sistema-de-facturacion-legacy" tabindex="-1"><strong>Objetivo</strong>: Entender y documentar sistema de facturación legacy <a class="header-anchor" href="#objetivo-entender-y-documentar-sistema-de-facturacion-legacy" aria-label="Permalink to &quot;**Objetivo**: Entender y documentar sistema de facturación legacy&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;analizar y documentar el sistema de facturación legacy para refactoring&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Resultado Automático</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔄 ADAPTIVE ROUTING: Learning mode detected</span></span>
<span class="line"><span>├── Pattern: &quot;analizar&quot; → Quick exploration workflow</span></span>
<span class="line"><span>├── Confidence: 0.94 (high pattern match)</span></span>
<span class="line"><span>├── Strategy: 2-phase optimized (70% faster)</span></span>
<span class="line"><span>└── Duration: ~6 minutes estimated</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 0: Quick Routing (1 minute)</span></span>
<span class="line"><span>├── Registry Analysis: /quick-explore optimal (94% success rate)</span></span>
<span class="line"><span>├── Command Selection: Exploration-focused atomic commands</span></span>
<span class="line"><span>└── Optimization: Skip planning overhead for analysis tasks</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 3: Execution (5 minutes)</span></span>
<span class="line"><span>├── 🤖 Code Analyzer: Mapped 847 functions, 23 modules</span></span>
<span class="line"><span>├── 🤖 Dependency Specialist: Identified 12 critical paths</span></span>
<span class="line"><span>├── 🤖 Documentation Specialist: Generated interaction diagrams</span></span>
<span class="line"><span>└── 📊 Results: Complete system map with refactoring recommendations</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>Entregables</strong>:</p><ul><li>✅ System architecture diagram</li><li>✅ Dependency analysis report</li><li>✅ Code quality assessment</li><li>✅ Refactoring priority matrix</li><li>✅ Risk assessment for changes</li><li>✅ Migration strategy outline</li></ul><hr><h3 id="_3-performance-optimization" tabindex="-1"><strong>3. Performance Optimization</strong> <a class="header-anchor" href="#_3-performance-optimization" aria-label="Permalink to &quot;**3. Performance Optimization**&quot;">​</a></h3><h4 id="objetivo-optimizar-api-que-esta-experimentando-latencia-alta" tabindex="-1"><strong>Objetivo</strong>: Optimizar API que está experimentando latencia alta <a class="header-anchor" href="#objetivo-optimizar-api-que-esta-experimentando-latencia-alta" aria-label="Permalink to &quot;**Objetivo**: Optimizar API que está experimentando latencia alta&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;optimizar API de e-commerce que tiene latencia &gt;2000ms en endpoints críticos&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Resultado Automático</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔄 PHASE 0: Intelligent Routing</span></span>
<span class="line"><span>├── Complexity: 1.2 (Medium)</span></span>
<span class="line"><span>├── Confidence: 0.82</span></span>
<span class="line"><span>├── Strategy: 3-phase execution (50% faster)</span></span>
<span class="line"><span>└── Duration: ~10 minutes estimated</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 0: Routing (1 minute)</span></span>
<span class="line"><span>├── Decision Engine: Performance optimization pattern detected</span></span>
<span class="line"><span>├── Parallel Analysis: Database + Code + Infrastructure beneficial</span></span>
<span class="line"><span>└── Command Selection: Performance-focused orchestration</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 2: Strategic Planning (3 minutes)</span></span>
<span class="line"><span>├── 🤖 Performance Specialist: Identified N+1 queries, cache misses</span></span>
<span class="line"><span>├── 🤖 Database Specialist: Index optimization strategy</span></span>
<span class="line"><span>├── 🤖 Architecture Specialist: Caching layer recommendations</span></span>
<span class="line"><span>└── 📊 Results: Multi-layer optimization plan ready</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 3: Execution (6 minutes)</span></span>
<span class="line"><span>├── 🤖 Query Optimizer: Reduced queries from 45 to 3 per request</span></span>
<span class="line"><span>├── 🤖 Cache Specialist: Redis implementation with 95% hit rate</span></span>
<span class="line"><span>├── 🤖 Index Specialist: Database indexes optimized</span></span>
<span class="line"><span>└── 📊 Results: Latency reduced from 2000ms to 180ms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><strong>Entregables</strong>:</p><ul><li>✅ Database queries optimized (15x reduction)</li><li>✅ Redis caching layer implemented</li><li>✅ Database indexes created</li><li>✅ Performance monitoring dashboard</li><li>✅ Load testing results</li><li>✅ Production deployment plan</li></ul><hr><h3 id="_4-arquitectura-de-microservicios" tabindex="-1"><strong>4. Arquitectura de Microservicios</strong> <a class="header-anchor" href="#_4-arquitectura-de-microservicios" aria-label="Permalink to &quot;**4. Arquitectura de Microservicios**&quot;">​</a></h3><h4 id="objetivo-disenar-arquitectura-completa-para-plataforma-de-streaming" tabindex="-1"><strong>Objetivo</strong>: Diseñar arquitectura completa para plataforma de streaming <a class="header-anchor" href="#objetivo-disenar-arquitectura-completa-para-plataforma-de-streaming" aria-label="Permalink to &quot;**Objetivo**: Diseñar arquitectura completa para plataforma de streaming&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;diseñar arquitectura de microservicios para plataforma de streaming con 1M+ usuarios&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model=opus</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Resultado Automático</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔄 PHASE 0: Intelligent Routing</span></span>
<span class="line"><span>├── Complexity: 1.9 (Ultra-High)</span></span>
<span class="line"><span>├── Confidence: 0.45 (architecture uncertainty)</span></span>
<span class="line"><span>├── Strategy: 5-phase complete orchestration + multi-agent</span></span>
<span class="line"><span>└── Duration: ~25 minutes estimated</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 1: Discovery (6 minutes)</span></span>
<span class="line"><span>├── 🤖 Domain Specialist: Identified 8 core domains</span></span>
<span class="line"><span>├── 🤖 Scale Specialist: Analyzed 1M+ user requirements</span></span>
<span class="line"><span>├── 🤖 Technology Specialist: Evaluated 15 technology options</span></span>
<span class="line"><span>├── 🤖 Pattern Specialist: Streaming architecture patterns</span></span>
<span class="line"><span>└── 📊 Results: Comprehensive requirements and constraints</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 2: Planning (8 minutes)</span></span>
<span class="line"><span>├── 🤖 Architecture Specialist: Service boundary definitions</span></span>
<span class="line"><span>├── 🤖 Data Specialist: Event sourcing + CQRS strategy</span></span>
<span class="line"><span>├── 🤖 Infrastructure Specialist: Kubernetes deployment plan</span></span>
<span class="line"><span>├── 🤖 Security Specialist: Authentication and authorization</span></span>
<span class="line"><span>└── 📊 Results: Detailed architecture blueprint</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 3: Execution (7 minutes)</span></span>
<span class="line"><span>├── 🤖 Service Designer: 12 microservices designed</span></span>
<span class="line"><span>├── 🤖 API Designer: OpenAPI specifications created</span></span>
<span class="line"><span>├── 🤖 Database Designer: Database per service strategy</span></span>
<span class="line"><span>├── 🤖 DevOps Specialist: CI/CD pipeline architecture</span></span>
<span class="line"><span>└── 📊 Results: Implementation-ready architecture</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 4: Verification (3 minutes)</span></span>
<span class="line"><span>├── 🤖 Architecture Validator: Single points of failure eliminated</span></span>
<span class="line"><span>├── 🤖 Performance Validator: Load testing scenarios</span></span>
<span class="line"><span>├── 🤖 Security Validator: Threat modeling completed</span></span>
<span class="line"><span>└── 📊 Results: 98% confidence, production-ready design</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 5: Documentation (1 minute)</span></span>
<span class="line"><span>├── 🤖 Documentation Specialist: Architecture decision records</span></span>
<span class="line"><span>├── 🤖 Diagram Specialist: C4 model diagrams generated</span></span>
<span class="line"><span>└── 📊 Results: Complete architecture documentation</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><p><strong>Entregables</strong>:</p><ul><li>✅ 12 microservices architecture</li><li>✅ API gateway configuration</li><li>✅ Database design (per service)</li><li>✅ Event streaming architecture</li><li>✅ Security implementation plan</li><li>✅ Monitoring and observability</li><li>✅ Deployment infrastructure</li><li>✅ Scaling strategy (1M+ users)</li></ul><hr><h3 id="_5-bug-fixing-critico" tabindex="-1"><strong>5. Bug Fixing Crítico</strong> <a class="header-anchor" href="#_5-bug-fixing-critico" aria-label="Permalink to &quot;**5. Bug Fixing Crítico**&quot;">​</a></h3><h4 id="objetivo-resolver-memory-leak-en-produccion" tabindex="-1"><strong>Objetivo</strong>: Resolver memory leak en producción <a class="header-anchor" href="#objetivo-resolver-memory-leak-en-produccion" aria-label="Permalink to &quot;**Objetivo**: Resolver memory leak en producción&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;encontrar y corregir memory leak crítico en aplicación Node.js en producción&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Resultado Automático</strong>:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🔄 PHASE 0: Intelligent Routing</span></span>
<span class="line"><span>├── Complexity: 1.3 (Medium-High)</span></span>
<span class="line"><span>├── Confidence: 0.68 (debugging uncertainty)</span></span>
<span class="line"><span>├── Strategy: 5-phase with emphasis on discovery</span></span>
<span class="line"><span>└── Duration: ~15 minutes estimated</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 1: Discovery (5 minutes)</span></span>
<span class="line"><span>├── 🤖 Memory Specialist: Heap dump analysis</span></span>
<span class="line"><span>├── 🤖 Code Specialist: Event listener audit</span></span>
<span class="line"><span>├── 🤖 Performance Specialist: Memory usage patterns</span></span>
<span class="line"><span>└── 📊 Results: Memory leak in WebSocket connections identified</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 2: Planning (2 minutes)</span></span>
<span class="line"><span>├── 🤖 Strategy Specialist: Hot-fix vs comprehensive fix</span></span>
<span class="line"><span>├── 🤖 Risk Specialist: Production impact assessment</span></span>
<span class="line"><span>└── 📊 Results: Staged rollout plan with rollback strategy</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 3: Execution (6 minutes)</span></span>
<span class="line"><span>├── 🤖 Fix Specialist: Connection cleanup implemented</span></span>
<span class="line"><span>├── 🤖 Test Specialist: Memory leak tests added</span></span>
<span class="line"><span>├── 🤖 Monitor Specialist: Memory monitoring enhanced</span></span>
<span class="line"><span>└── 📊 Results: Memory usage reduced by 89%</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔄 PHASE 4: Verification (2 minutes)</span></span>
<span class="line"><span>├── 🤖 Memory Validator: 24h stability test passed</span></span>
<span class="line"><span>├── 🤖 Performance Validator: No performance degradation</span></span>
<span class="line"><span>└── 📊 Results: 95% confidence, ready for production</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><strong>Entregables</strong>:</p><ul><li>✅ Memory leak root cause identified</li><li>✅ Fix implemented with tests</li><li>✅ Memory monitoring improved</li><li>✅ Prevention measures added</li><li>✅ Production deployment plan</li><li>✅ Rollback strategy ready</li></ul><hr><h2 id="🛠️-patrones-de-uso-avanzados" tabindex="-1">🛠️ Patrones de Uso Avanzados <a class="header-anchor" href="#🛠️-patrones-de-uso-avanzados" aria-label="Permalink to &quot;🛠️ Patrones de Uso Avanzados&quot;">​</a></h2><h3 id="multi-approach-parallel-development" tabindex="-1"><strong>Multi-Approach Parallel Development</strong> <a class="header-anchor" href="#multi-approach-parallel-development" aria-label="Permalink to &quot;**Multi-Approach Parallel Development**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;resolver problema de concurrencia en chat system&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parallel_approaches=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Beneficios</strong>:</p><ul><li>🔄 <strong>Múltiples soluciones</strong>: Explora diferentes enfoques simultáneamente</li><li>⚡ <strong>Comparación objetiva</strong>: Evalúa pros/cons de cada solución</li><li>🎯 <strong>Mejor resultado</strong>: Combina mejores elementos de cada enfoque</li><li>🚀 <strong>Desarrollo rápido</strong>: Trabajo paralelo en git worktrees</li></ul><h3 id="modo-aprendizaje-continuo" tabindex="-1"><strong>Modo Aprendizaje Continuo</strong> <a class="header-anchor" href="#modo-aprendizaje-continuo" aria-label="Permalink to &quot;**Modo Aprendizaje Continuo**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Primera vez</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;implementar autenticación JWT&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Subsecuentes usos (más rápido)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;implementar autenticación OAuth&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 60% más rápido</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;implementar autenticación SAML&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 70% más rápido</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>Ventajas</strong>:</p><ul><li>📈 <strong>Mejora continua</strong>: Cada uso optimiza futuros comandos</li><li>🎯 <strong>Patrones personalizados</strong>: Adapta a tu estilo de trabajo</li><li>⚡ <strong>Velocidad incrementada</strong>: Hasta 70% más rápido con el uso</li></ul><h3 id="analisis-de-complejidad-automatico" tabindex="-1"><strong>Análisis de Complejidad Automático</strong> <a class="header-anchor" href="#analisis-de-complejidad-automatico" aria-label="Permalink to &quot;**Análisis de Complejidad Automático**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># El sistema auto-detecta complejidad</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;agregar botón&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                    # → 2 fases (simple)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;implementar sistema de pagos&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # → 3 fases (medio)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;diseñar arquitectura distribuida&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # → 5 fases (complejo)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="📊-metricas-de-rendimiento-por-caso-de-uso" tabindex="-1">📊 Métricas de Rendimiento por Caso de Uso <a class="header-anchor" href="#📊-metricas-de-rendimiento-por-caso-de-uso" aria-label="Permalink to &quot;📊 Métricas de Rendimiento por Caso de Uso&quot;">​</a></h2><h3 id="desarrollo-de-features" tabindex="-1"><strong>Desarrollo de Features</strong> <a class="header-anchor" href="#desarrollo-de-features" aria-label="Permalink to &quot;**Desarrollo de Features**&quot;">​</a></h3><ul><li><strong>Tiempo promedio</strong>: 12-18 minutos</li><li><strong>Tasa de éxito</strong>: 96%</li><li><strong>Cobertura de tests</strong>: 94%</li><li><strong>Calidad de código</strong>: 9.2/10</li></ul><h3 id="analisis-de-codigo" tabindex="-1"><strong>Análisis de Código</strong> <a class="header-anchor" href="#analisis-de-codigo" aria-label="Permalink to &quot;**Análisis de Código**&quot;">​</a></h3><ul><li><strong>Tiempo promedio</strong>: 4-8 minutos</li><li><strong>Comprensión lograda</strong>: 97%</li><li><strong>Documentación generada</strong>: 100%</li><li><strong>Actionable insights</strong>: 89%</li></ul><h3 id="optimizacion-performance" tabindex="-1"><strong>Optimización Performance</strong> <a class="header-anchor" href="#optimizacion-performance" aria-label="Permalink to &quot;**Optimización Performance**&quot;">​</a></h3><ul><li><strong>Tiempo promedio</strong>: 8-15 minutos</li><li><strong>Mejora promedio</strong>: 73%</li><li><strong>Problemas resueltos</strong>: 91%</li><li><strong>Regresiones</strong>: 0%</li></ul><h3 id="arquitectura-de-sistemas" tabindex="-1"><strong>Arquitectura de Sistemas</strong> <a class="header-anchor" href="#arquitectura-de-sistemas" aria-label="Permalink to &quot;**Arquitectura de Sistemas**&quot;">​</a></h3><ul><li><strong>Tiempo promedio</strong>: 20-30 minutos</li><li><strong>Completitud</strong>: 98%</li><li><strong>Escalabilidad</strong>: 95%</li><li><strong>Mantenibilidad</strong>: 93%</li></ul><h2 id="🎯-tips-para-maxima-efectividad" tabindex="-1">🎯 Tips para Máxima Efectividad <a class="header-anchor" href="#🎯-tips-para-maxima-efectividad" aria-label="Permalink to &quot;🎯 Tips para Máxima Efectividad&quot;">​</a></h2><h3 id="objetivos-claros" tabindex="-1"><strong>Objetivos Claros</strong> <a class="header-anchor" href="#objetivos-claros" aria-label="Permalink to &quot;**Objetivos Claros**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✅ Bueno</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;implementar cache Redis para reducir latencia API&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ❌ Vago</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mejorar performance&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="contexto-especifico" tabindex="-1"><strong>Contexto Específico</strong> <a class="header-anchor" href="#contexto-especifico" aria-label="Permalink to &quot;**Contexto Específico**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✅ Mejor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;refactorizar módulo de pagos en Node.js para mejor testabilidad&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✅ Bueno</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;refactorizar módulo de pagos&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="usar-hints-cuando-sea-necesario" tabindex="-1"><strong>Usar Hints Cuando Sea Necesario</strong> <a class="header-anchor" href="#usar-hints-cuando-sea-necesario" aria-label="Permalink to &quot;**Usar Hints Cuando Sea Necesario**&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Para arquitectura compleja</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;diseñar microservicios&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model=opus</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Para implementación rápida</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;agregar validación forms&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complexity=low</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><p><strong>¿Listo para empezar?</strong> Elige un ejemplo similar a tu caso de uso y adapta el comando a tu objetivo específico.</p><p><strong>Siguiente paso</strong>: <a href="/context-engineering-docs/context-eng.html">Entender el comando principal</a> para aprovechar al máximo todas las características.</p>`,72)]))}const b=a(l,[["render",p]]);export{m as __pageData,b as default};
